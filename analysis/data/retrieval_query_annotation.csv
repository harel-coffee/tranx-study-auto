User,Simplified,Same,User Good,Simplified Good,
"open ""data.csv"" file",open csv file,0,0,0,
copy file `ddd.png`,copy file,1,1,1,
save `compan_df` dataframe to a file,save dataframe to a file,0,1,1,
save `compand_df` dataframe to a file,save dataframe to a file,1,1,1,
get the head of dataframe `df`,get the head of dataframe,1,1,1,
sort dataframe `jdf` by `scores`,sort dataframe by column,0,1,1,
sort dataframe `jdf` by the values of column 'scores',sort dataframe by the values of column,1,1,1,
"pandas read csv named ""data.csv""",pandas read csv,0,0,0,
"make directory ""output"" if it doesn't exist",make directory if it doesn't exist,1,0,0,
read a json file named `f`,read a json file,1,1,1,
write json in `ret` to file `outfile`,write json in variable to file,1,1,1,
loop over a range of `count`,loop over a range,0,1,0,
randomly pick an item from `seq`,randomly pick an item,1,1,1,
call `pick_with_replacement`,call function,0,0,1,
"walk all nested files in the directory ""data""",walk all nested files in the directory,0,1,1,
assign current date and time to `now`,assign current date and time to variable,0,1,0,
convert `week_date` to GMT timezone and assign to `GMT_week_date`,convert variable to GMT timezone and assign to another variable,0,0,0,
display `week_date` in format mm-dd-yyyy hh:mm,display datetime in format mm-dd-yyyy hh:mm,0,0,1,
change datetime format of `week_date` to mm-dd-yyyy hh:mm,change datetime format to mm-dd-yyyy hh:mm,0,0,0,
"read csv file ""data.csv""",read csv file,1,1,1,
"write csv `output_f` to file ""output/output.csv""",write csv to file filename,0,1,1,
"if directory ""output"" exists",if directory exists,0,0,1,
check if file `output_file` exists,check if file exists,1,1,1,
"GET request to ""https://jsonplaceholder.typicode.com/posts"" with argument userId",GET request to url with argument,0,0,1,
"change directory to ""data""",change directory to another,0,0,1,
pair characters in `characters` and numbers in `numbers`,pair characters in list and numbers in list,0,1,0,
copy files and directories under `data` directory,copy files and directories under given directory,0,1,1,
"create list ""a_list""",create list,0,1,1,
"copy column from ""data.csv"" file to another ""output.csv""",copy column from csv file to another csv file,0,0,0,
"copy column from ""data.csv"" to ""output.csv""",copy column from csv file to csv file,0,0,0,
"Given list `letters` and `integers`, create a dicitonary such that the values in `letters` are keys and values in `integers` are values","Given 2 list, create a dicitonary such that the values in one are keys and values in another are values",0,1,0,
print `dic` sorted by keys,print dict sorted by keys,1,1,1,
open a csv file `data.csv` and read the data,open a csv file and read the data,1,0,0,
delete first row from dataframe `df`,delete first row from dataframe,1,1,1,
delete first and last row from the dataframe `df`,delete first and last row from the dataframe,1,1,1,
save `df` to a file `output.csv` in a new directory `example_output`,save dataframe to a csv file in a new directory,0,0,1,
visit the url `url`,visit the url,1,1,1,
parse all hyperlinks from `r` using bs4,parse all hyperlinks using bs4,0,1,1,
visit the given url `url` and extract all hrefs from there,visit the given url and extract all hrefs from there,1,1,1,
visit `url` and extract hrefs using bs4,visit url and extract hrefs using bs4,1,0,0,
find all hrefs from `soup`,find all hrefs from beautifulsoup,1,1,1,
find all bold text from html `soup`,find all bold text from html beautifulsoup,0,0,0,
find all red colored text from html `soup`,find all red colored text from html beautifulsoup,0,0,0,
create a dictionary with keys `random_letters` and values `random_numbers`,create a dictionary with keys and values,0,0,0,
print `dic` sorted by keys,print dict sorted by keys,1,1,1,
print `dic` keys sorted,print dict keys sorted,1,1,1,
print `dic` keys on each line,print dict keys on each line,1,0,0,
"read ""data.csv"" file",read csv file,0,1,1,
"read csv file ""data.csv""",read csv file,0,1,1,
delete first and last column of `df`,delete first and last column of dataframe,0,0,0,
"write output to csv file ""output.csv""",write output to csv file,0,0,1,
write `output` to csv file,write output csv file,0,1,0,
"search for pattern ""%d%d-%d%d"" in `file`",search for pattern in file,0,0,0,
copy file from `src_path` to `dest_path`,copy file from source path to destination path,0,1,1,
check if `file` is a directory,check if is a directory,0,1,1,
"write `final_data` to csv file ""price.csv""",write to csv file,0,1,1,
get time and date in gmt in `date`,get time and date in gmt,0,0,0,
open csv file `data.csv`,open csv file,0,0,0,
delete the first column in csv file `df`,delete the first column in csv file,0,0,0,
,,,,,Total
,,,0,0,18
,,,0,1,7
,,,1,0,5
,,,1,1,29
,,,,,
,,,,U Correct,34
,,,,S Correct,36
,,,,Total,59